% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repository.R
\name{repository}
\alias{repository}
\alias{git_init}
\alias{git_find}
\title{Create or discover a local git repository}
\usage{
git_init(path = ".")

git_find(path = ".")
}
\arguments{
\item{path}{\itemize{
\item For \code{git_init()}: directory of the git repository to create. If
this directory already exists, it must be empty. If it does not exist, it
is created, along with any intermediate directories that don't yet exist.
\item For \code{git_find()}: directory at which to start the search for a git
repository. If it is not a git repository, then its parent directory is
consulted, then the parent's parent, and so on.
}}
}
\value{
The path to the git repository.
}
\description{
Use \code{git_init()} to create a new repository or \code{git_find()} to discover an
existing local repository. Each has some ability to recurse down or up, as
appropriate.
}
\examples{
# directory does not yet exist
r <- tempfile(pattern = "gert")
git_init(r)
git_find(r)

# create a child directory, then a grandchild, then search
r_grandchild_dir <- file.path(r, "aaa", "bbb")
dir.create(r_grandchild_dir, recursive = TRUE)
git_find(r_grandchild_dir)

# cleanup
unlink(r, recursive = TRUE)

# directory exists but is empty
r <- tempfile(pattern = "gert")
dir.create(r)
git_init(r)
git_find(r)

# cleanup
unlink(r, recursive = TRUE)
}
\seealso{
Other git: 
\code{\link{branch}},
\code{\link{commit}},
\code{\link{fetch}},
\code{\link{git_config}()},
\code{\link{git_open}()},
\code{\link{signature}}
}
\concept{git}
