% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repository.R
\name{repository}
\alias{repository}
\alias{git_init}
\alias{git_open}
\alias{git_find}
\alias{git_info}
\title{Create or open a git repository}
\usage{
git_init(path = ".")

git_open(path = ".")

git_find(path = ".")

git_info(repo = ".")
}
\arguments{
\item{path}{directory of the git repository. For \code{\link[=git_init]{git_init()}} or
\code{\link[=git_clone]{git_clone()}} this must be a non-existing or empty directory.}

\item{repo}{a path to an existing repository, or a git repository object as
returned by \code{\link[=git_open]{git_open()}}, \code{\link[=git_init]{git_init()}} or \code{\link[=git_clone]{git_clone()}}.}
}
\value{
\itemize{
\item \code{git_find()}: path to the git repository
\item \code{git_init()}, \code{git_open()}: a git repository object
\item \code{git_info()}: a list
}
}
\description{
Use \code{git_init()} to start a new repository or \code{git_clone()} to download a
repository from a remote.

You may use \code{git_find()} and \code{git_open()} to explicitly discover and open
existing git repositories, but this is usually not needed because all gert
functions also take a path argument which implicitly opens the repo.
}
\seealso{
Other git: 
\code{\link{branch}},
\code{\link{commit}},
\code{\link{fetch}},
\code{\link{git_config}()},
\code{\link{signature}}
}
\concept{git}
