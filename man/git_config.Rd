% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{git_config}
\alias{git_config}
\alias{git_config_global}
\alias{git_config_set}
\alias{git_config_global_set}
\title{Get or set Git configuration}
\usage{
git_config(repo = ".")

git_config_global()

git_config_set(name, value, repo = ".")

git_config_global_set(name, value)
}
\arguments{
\item{repo}{Path to the repository. If \code{path} is itself not a
repository, its parents are recursively considered, similar to
\code{\link[=git_find]{git_find()}}. An object of class \code{git_repo_ptr} is also accepted and passed
through.}

\item{name}{Name of the option to set}

\item{value}{Value to set. Must be a string, logical, number or \code{NULL} (to
unset).}
}
\value{
\itemize{
\item \code{git_config()}: a \code{data.frame} of the Git options "in force" in the context
of \code{repo}, one row per option. The \code{level} column reveals whether the
option is determined from global or local config.
\item \code{git_config_global()}: a \code{data.frame}, as for \code{git_config()}, except only
for global Git options.
\item \code{git_config_set()}, \code{git_config_global_set()}: The previous value of
\code{name} in local or global config, respectively. If this option was
previously unset, returns \code{NULL}. Returns invisibly.
}
}
\description{
Get or set Git options, as \verb{git config} does on the command line. \strong{Global}
settings affect all of a user's Git operations (\verb{git config --global}),
whereas \strong{local} settings are scoped to a specific repository (\verb{git config --local}). When both exist, local options always win. Four functions address
the four possible combinations of getting vs setting and global vs. local.\tabular{lll}{
    \tab \strong{local} \tab \strong{global} \cr
   get \tab \code{git_config()} \tab \code{git_config_global()} \cr
   set \tab \code{git_config_set()} \tab \code{git_config_global_set()} \cr
}
}
\examples{
# Set and inspect a local, custom Git option
r <- file.path(tempdir(), "gert-demo")
git_init(r)

previous <- git_config_set("aaa.bbb", "ccc", repo = r)
previous
cfg <- git_config(repo = r)
subset(cfg, level == "local")
cfg$value[cfg$name == "aaa.bbb"]

previous <- git_config_set("aaa.bbb", NULL, repo = r)
previous
cfg <- git_config(repo = r)
subset(cfg, level == "local")
cfg$value[cfg$name == "aaa.bbb"]

unlink(r, recursive = TRUE)

\dontrun{
# Set global Git options
git_config_global_set("user.name", "Your Name")
git_config_global_set("user.email", "your@email.com")
git_config_global()
}
}
\seealso{
Other git: 
\code{\link{branch}},
\code{\link{commit}},
\code{\link{fetch}},
\code{\link{git_open}()},
\code{\link{repository}},
\code{\link{signature}}
}
\concept{git}
